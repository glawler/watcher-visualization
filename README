Here are instructions on building and running the "new old watcher"
------------------------------------------------------------------
The new old watcher requires q few libraries exist on the system, i.e. be 
installed in system directories: QT 4.3 (or greater), boost 1.36 (or greater), 
and libidmef (the McAfee version from the idmanet/unstable repository.

The boost 1.36 requirement is only for building the new watcher network
infrastructure - not the new old watcher GUI, so if you're not building that
(and you shouldn't be yet), then the default OS distribution is probably fine. 
If you want to build the 1.36 version, I've put the tar file in ./tars.

Yum installed libs: libpcap-devel, freeglut-devel, qt, boost
built: libidmef (SPARTA version)

Fedora 10 build with rpmfusion yum repos installed:
---------------------------------------------------
Many of the libraries used by watcher are available via yum:
sudo yum install libpcap.i386 libpcap-devel.i386
sudo yum install freeglut.i386 freeglut-devel.i386
sudo yum install libconfig.i386 libconfig-devel.i386
sudo yum install log4cxx.i386 log4cxx-devel.i386
sudo yum install qwt.i386 qwt-devel.i386

Install QT:
----------------------------------------------------------------
Assuming a Fedora based system:

> yum install qt4.i386 qt4-x11.i386 PyQt4.i386 PyQt4-devel.i386 qt4-devel.i386 qt4-sqlite.i386 qt4-doc.i386

You probably don't need all of these, but it doesn't hurt to have them.

Install boost:
---------------------------------------------------------------
A version probably already exists on your machine as lots of things use it.
But just in case:

> yum install boost.i386

Install libidmef (SPARTA version):
----------------------------------------------------------------
cd [watcher repo dir]
cd src
tar zxvf ../tars/libidmef-0.7.3-beta-McAfee20050325.tar.gz
cd libidmef-0.7.3-beta-McAfee20050325
./configure --prefix=[watcher repo dir]
make
make install

Install 3rd party libs locally. 
---------------------------------------------------------------
I've installed all the following locally. You can if you want, or
you can install globally. Installing locally usually just involves
changing the --prefix argument to ./configure.

libconfig 
-----------------------------------------------------
-- Note that with Fedora 10 (with the rpmfusion yum repos) you 
-- can just install this via yum: 'sudo yum install libconfig.i386 libconfig-devel.i386'
libconfig gives a C and C++ interface to writing and 
reading configuration files. 

libconfig installed in top level directory:
(make sure to replace the --prefix with the location of 
your source tree)

cd src
tar zxvf ../tars/libconfig-1.3.1.tgz
cd src/libconfig-1.3.1/
./configure --prefix=/home/hglawler/src/watcher ~/src/watcher
make && make install

This could have been part of the build process, but I decided
to just install it in the interest of simplicity. If you need to 
rebuild or update, do the sequence above...

libidsCommunications.a
----------------------------------------------------
libidsCommunications.a is pre-built in the ./lib
dir. If it needs to be rebuilt:

cd src/watcher/legacyWatcher
make libidsCommunications.a
cp libidsCommunications.a ../../../lib

binaries for controlling watcher from the testnodes (optional)
---------------------------------------------------
cd src/watcher/legacyWatcher
for f in floatinglabeltest routingdetector watcherpropertytest watchergraphtest edgetest labeltest; do
	make $f;
	cp $f ../../../bin;
done;

log4cxx
----------------------------------------------------
This lib requires that two others be installed. Here's 
how I did it:

-- Note that with Fedora 10 (with the rpmfusion yum repos) you 
-- can just install these via: 'sudo yum install log4cxx.i386 log4cxx-devel.i386'

# ( When I installed on coke I got errors during 'make check' - I ignored them. )

# install APR (Apache run-time)
cd /home/glawler/src/watcher
cd src
tar zxvf ../tars/apr-1.3.3.tar.gz
cd apr-1.3.3
./configure --prefix=$HOME/src/watcher
make 
make check      # This may fail - I just ignored it.
make install

# install apr-utils
cd $HOME/src/watcher
cd src
tar zxvf ../tars/apr-util-1.3.4.tar.gz
cd apr-util-1.3.4
./configure --prefix=$HOME/src/watcher --with-apr=$HOME/src/watcher
make 
make check      # This may fail - I just ignored it.
make install

# install log4cxx
cd $HOME/src/watcher
cd src
tar zxvf ../tars/apache-log4cxx-0.10.0.tar.gz
cd apache-log4cxx-0.10.0
./configure --prefix=$HOME/src/watcher --with-apr=$HOME/src/watcher --with-apr-util=$HOME/src/watcher --disable-doxygen
make 
(on Fedora 9 I had to add
make check
make install

Qwt - the 2d graphing library for use with QT
---------------------------------------------
-- Note that with Fedora 10 (with the rpmfusion yum repos) you 
-- can just install this via yum: 'sudo yum install qwt.i386 qwt-devel.i386'
--
cd src
tar jxvf ../tars/qwt-5.1.1.tar.bz2 
cd qwt-5.1.1/
# edit qwtconfig.pri setting the INSTALLBASE to your watcher repo dir. (Don't use $HOME - use full pathname).
qmake-qt4
make 
make install
(you may need to sudo make install, as qwt copies its qt-designer support objects to the qt system directory)

Make the logger library (a small wrapper for log4cxx)
----------------------------------------------------
cd src/logger
make 

Make the util library
---------------------
cd src/util
make


Finally make the watcher
------------------------
cd src/watcher
qmake-qt4
make

Run the watcher
-------------------------
# Copy sample configuration into working directory
cd src/watcher
cp ../../etc/watcher.cfg.sample watcher.cfg
cp ../../etc/watcher.log.properties.sample watcher.log.properties
# Tell the system where to find the libraries...
export LD_CONFIG_PATH=$HOME/watcher/lib

./watcher -f watcher.cfg [normal watcher args] live.conf

Post library installation.
------------------------------------------------
Pull the repository again. I patched a header file in log4cxx, and the making and installing
of that library overwroter the file. So go to the top level again and to 'hg pull -u', that will
overwrite the file with the one from the repo and all will be well. Or just revert it:

hg revert include/log4cxx/helpers/objectptr.h







