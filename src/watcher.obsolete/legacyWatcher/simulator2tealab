#!/bin/sh

# $Id: simulator2tealab,v 1.6 2006/04/24 19:05:34 glawler Exp $
#
# convert the mobility log messages from a simulation run into a 
# script for tealab, and a set of locations files.  It is dependant
# on the mob script config files to convert IP addrs into MAC addrs.
#
# First argument is the stdout of the simulator.
# Second argument is a directory to put the files into.
#  (must already exist)

# take the MOB_NODELIST, which is control network addrs, and
# lop off the first three octets, to generate node numbers.

for i in $MOB_NODELIST
do
n=`echo $i | awk ' BEGIN { FS="." } { print $4 } ' `
nodelist="$nodelist $n"
done

controlnetwork="192.168.1"
manetnetwork="192.168.2"
mobnodes=/usr/local/etc/mob/nodes
serverlist="192.168.1.1 192.168.1.100"

pktloss=10


input=$1
output=$2
TAG=$output
TEALABSCRIPT=$output/tealab.tdf

echo > $TEALABSCRIPT

# for init:  lines like:
#define macaddress tara 00:50:04:61:30:7D

# Define MAC addrs for nodes on data network
for i in $nodelist
do
dataaddr="$manetnetwork.$i"
macaddr=`awk ' $5=="'${dataaddr}'" { print $3 } ' $mobnodes`
echo "define macaddress $i $macaddr"  >> $TEALABSCRIPT
done

# Define MAC addrs for the control machines, on the
# control network.  (we are putting rules so the nodes always
# accept traffic from the control machines into the tealab script.)
for i in $serverlist
do
dataaddr="$i"
macaddr=`awk ' $5=="'${dataaddr}'" { print $3 } ' $mobnodes`
echo "define macaddress $i $macaddr"  >> $TEALABSCRIPT
done

# Start with no one seeing anyone.
for i in $nodelist
do
for j in $nodelist
do
echo "on $i deny $j inbound"  >> $TEALABSCRIPT
done
done

# And, everyone seeing the servers.
for i in $nodelist 
do
for j in $serverlist
do
echo " on $i accept $j inbound" >> $TEALABSCRIPT
done
done

#echo "drop $pktloss in"  >> $TEALABSCRIPT


# And then walk the scripts looking for make/break messages, and
# coordinates for the locations files.
awk '\
BEGIN {step=0} \
$1=="time:"\
 {\
	time=$2;\
	print "wait for '$TAG'/tick" step " message";\
	output="'$output'/tick"step".locations";\
	step++;\
	print "" > output;\
	for (i in x)\
	{\
		print "'$controlnetwork'." i " at " x[i] " " y[i] >>output;\
	}\
	close (output)\
}\
$1=="mobility:" && $2=="time" && $4=="make"\
{\
	print "on " $5 " accept " $7 " inbound\non " $7 " accept " $5 " inbound"\
}\
$1=="mobility:" && $2=="time" && $4=="break" { print "on " $5 " deny " $7 " inbound\non " $7 " deny " $5 " inbound" }  \
$1=="mobility:" && $2=="time" && $6=="at" { x[$5]=$7; y[$5]=$8; } \
END { }' $input  >> $TEALABSCRIPT

