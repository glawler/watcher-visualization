
$Id: positionweight.txt,v 1.1 2005/11/14 21:29:09 tjohnson Exp $

How to assign hierarchy positions:

A node's position in the hierarchy may be weighted, to bias how that node
is selected as a cluster-head or root node.  unUnfortunately, while the API
supports adding arbitrary integers, from 0 meaning a node is banned from
a position to 0xFFFFFFFF meaning a node is assigned to a position, the
underlying implementation is not that strong.

This documents how it actually works.

First, a posweight file is created.  It contains lines which specify a
node, a position, and a weight.  The node is an IP address (in dotted
quad format), the position is one of ROOT, NEIGHBOR, or REGION, and
the weight is ASSIGNED, BANNED, or an integer.  (Case does not matter
in the actual file.)

The two parts which are implemented is that a root node may be assigned,
and a neighborhood coordinator may be banned.  Regional coordinator weights
are completely ignored, as is the fine grained control of root and
neighborhood.

An example posweight file is:

# ip address (or index in simulator) position weight
#
# where position is one of root, neighborhood, regional,
# and weight is one of assigned, banned, or base 10 integer.

0.0.0.10 ROOT assigned
0.0.0.16 NEIGHBORHOOD banned

All the nodes must have a copy of that file, and they must all match.
The file is then specified in the .conf file, with the line:
positionweightfile:example.posweight

The demon will then load the file when it starts.

The final behavior will then be, that if a node has an assigned root node
as a neighbor, it will use that node as its cluster-head.  Thus the assigned
root /always/ wins the election, and ends up root.  If a node has a neighbor
which is banned from being a neighborhood cluster-head, that node will /never/
be chosen as a cluster-head, and thus stays a leaf node.  The only exception
to that is when a banned node is the only neighbor a node has.
