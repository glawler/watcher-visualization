#!/bin/bash

# $Id: simulator2tealab_ARL,v 1.1 2006/02/16 17:55:54 rgopaul Exp $
#
# convert the mobility log messages from a simulation run into a 
# script for tealab, and a set of locations files.  It is dependant
# on the mob script config files to convert IP addrs into MAC addrs.
#
# First argument is the stdout of the simulator.
# Second argument is a directory to put the files into.
#  (must already exist)

# take the MOB_NODELIST, which is control network addrs, and
# lop off the first three octets, to generate node numbers.

list=`cat /mnt/jmap/ip_nodelist`
for i in $list
do
n=`echo $i | awk ' BEGIN { FS="." } { print $4 } ' `
nodelist="$nodelist $n"
done

controlnetwork="192.168.1"
manetnetwork="192.168.5"

pktloss=10

input=$1
output=$2
TEALABSCRIPT=$output/tealab.tdf

echo > $TEALABSCRIPT

# for init:  lines like:
#define macaddress tara 00:50:04:61:30:7D

# Define MAC addrs for nodes on data network
# for i in $nodelist
# do
# dataaddr="$manetnetwork.$i"
# macaddr=`awk ' $5=="'${dataaddr}'" { print $3 } ' $mobnodes`
# echo "define macaddress $i $macaddr"  >> $TEALABSCRIPT
# done

# Define MAC addrs for the control machines, on the
# control network.  (we are putting rules so the nodes always
# accept traffic from the control machines into the tealab script.)
# for i in $serverlist
# do
# dataaddr="$i"
# macaddr=`awk ' $5=="'${dataaddr}'" { print $3 } ' $mobnodes`
# echo "define macaddress $i $macaddr"  >> $TEALABSCRIPT
# done

# Start with no one seeing anyone.
for i in $nodelist
do
for j in $nodelist
do
echo "on node$i deny node$j inbound"  >> $TEALABSCRIPT
done
done

# And, everyone seeing the servers.
# for i in $nodelist 
# do
# for j in $serverlist
# do
# echo " on $i accept $j inbound" >> $TEALABSCRIPT
# done
# done

# echo "drop $pktloss in"  >> $TEALABSCRIPT


# And then walk the scripts looking for make/break messages, and
# coordinates for the locations files.

#	print "wait for tick" step " message";\

awk '\
BEGIN {step=0} \
$1=="time:"\
 {\
	time=$2;\
	print "wait for 5 seconds";\
	step++;\
	for (i in x)\
	{\
		print "on node" i " position " x[i] " " y[i] ;\
	}\
}\
$1=="mobility:" && $2=="time" && $4=="make"\
{\
	print "on node" $5 " accept node" $7 " inbound\non node" $7 " accept node" $5 " inbound"\
}\
$1=="mobility:" && $2=="time" && $4=="break" { print "on node" $5 " deny node" $7 " inbound\non node" $7 " deny node" $5 " inbound" }  \
$1=="mobility:" && $2=="time" && $6=="at" { x[$5]=$7; y[$5]=$8; } \
END { }' $input  >> $TEALABSCRIPT
