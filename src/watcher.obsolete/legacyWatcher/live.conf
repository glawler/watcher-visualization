#
# example configuration file
# $Id: live.conf,v 1.42 2007/08/14 17:58:07 dkindred Exp $
#
numnodes:21
# antenna radius is only relevant[1] when simulating
# if a node is within another node's antenna radius,
# the first node can hear the transmissions of the 
# second node.
# [1] - except if using gmcluster, in which case it is
# used to compute the estimated link expiration time (LET)
# between nodes. 
antennaradius:90

# area dimensions and mobility seed and speed are only
# relevant when simulating.  
areaX:1024
areaY:1024

# Initial node positions:
# This determines how the initial node positions will be 
# set.  It may have one of several values:
#
#  file - honor coords in locations file
#  random - ovwrite invalid (x<=0) coords with random coords
#  randommindist - overwrite invalid (x<=0) coords with random
#    coords, but if too close together, reroll.

mobilityinitposition:file

# For randommindist, the minium distance a node may be from another
# node.
mobilityinitmindistance: 40

# Random number seed for initial positions:
mobilityinitseed: 42

# File to load IP addrs and locations from.  It will be read
# no matter what the value of mobilityinitposition is,so that
# one may specify IP addrs.
# Note: a relative pathname here will be interpreted relative to 
# the directory containing the main (live.conf) config file.

mobilityinitfile:live.locations

# Mobility model selection  (simulator only)
#  (This is how the initial node coords change as time passes)
# These contain lists of node ids (the last octet of the address
# as specified in the locations file, OR the numbers 0 to numnodes-1
# if no locations file is specified.).  
# If one of these has the word "default" in it, then any nodes
# not specified will get that mobility model
#
mobility_none:default
mobility_randomwalk:
mobility_randomheading:
mobility_randomwaypoint:

# Mobility constraints: there are three types of constraints, 
# nofly zones: which define a rectangle where a node can not be
# flyonly zones: where a node can only be
# repel: a radius which nodes will not get closer to each other than.
# Constraint types are numbered (separately for each) starting at 1.
# To have more than one, increment the number on the end of the name.
#
# For nofly and flyonly:
#  The numbers are x, y, width, height (in pixels)
#
# For repel:
#  The number is the radius

mobility_nofly1:50,50,100,200
mobility_flyonly1:50,50,100,200
mobility_repel1:50

# To have a constraint apply to a subset of the nodes, define a
# nodes variable which matches the constraint.  The numbers are node
# indices, 0 to numnodes-1.  
# This is the nodes which will have the constraint, not the nodes
# which the constraint checks.  So for a repel constraint, it means the
# specified nodes will be repelled from all other nodes.

mobility_flyonly1_nodes:6,7,8

# Random number seed for the mobility model:
mobilityseed: 42

# Speed at which randomwalk, randomheading and randomwaypoint move nodes
# (units/sec)
mobilityspeed:1

# Use (MANE) GPS info to direct the node(s).
mobility_gpsdata:

# if mobility_gpsRepeat is non-zero, GPS will loop when it hits the 
# end of the data file. 
mobility_gpsRepeat:1

# GPS config file. Has the same format as the mane-gpse "scenario" file: 
# ...
# ID,FILENAME
# ID,FILEANME
# ...
# The crucial difference is the ID is teh last octet of the node's 
# address, not the MANE gps id. 
#
# This file gives a node ID to GPS coordinate file mapping. This 
# must be set if using GPS mobility and file must contain a line
# for every node using GPS mobilty. 
#
# Note: a relative pathname here will be interpreted relative to 
# the directory containing the main (live.conf) config file.
mobility_gpsConfigFile:

# The manet traffic will go over UDP packets on the 
# port udpport.  The demon to client traffic will go over
# TCP on the port tcpport.  They are typically the same,
# and the default is 4837.  
# The UDP port may be changed to allow one to run multiple
# separate hierarchies on the same physical network.  
# Changing the TCP port will require changing the client
# API code as well.
udpport:4837
tcpport:4837

# The hierarchy demon can use multiple network interfaces
# at once.  List the network numbers (ip addr anded with
# the interfaces netmask) of the interfaces to use here,
# separated with commas.  The first one will be the "main"
# interface, the node's address on that interface will be
# what is returned as the node's ManetAddr.  Manet broadcast
# packets will be transmitted on all interfaces listed.
#
# If this is not specified, or matches no interfaces, then
# the daemon will exit.
manetnetwork: 192.168.2.0
# manetnetwork: 192.168.2.0,192.168.3.0

# Or, if you know the manet network address you wish to
# use specifically, you can put it on a manetaddr line, and
# it will override any manetnetwork addresses.
#manetaddr: 192.168.2.36
manetaddr: 157.185.80.186

# If this is non-zero, then the demon will accept manet packets
# from any IP address.  (It will normally only accept packets on
# subnets which are attached to local interfaces AND listed in
# manetnetwork.)
manetpromisc:1

# Parameters for amroute algorithm.
# amroute_participants is which nodes will participate in amroute.  A node
# will participate if its address mod amroute_particpants==0
amroute_participants:1
amroute_treecreatecopies:3

# Parameters for the interim and interim2 algorithms:

# This is the max TTL, after which the algorithm assumes it has spanned
# the manet, and has found its root node
interim_maxTTL:32

# To compute the distance to a node, we keep track of the hopCountWindow packets 
# and use the minimum hopcount of the set.
interim_hopCountWindow:5

# The delay after a neighbor arrives before a node will select its coordinator
interim_timeSelect:2000

# The delay between hello packet transmission
interim_timeHello:2000

# The time from the last hello transmission heard before a neighbor is declared
# missing and removed from the neighbor list.
interim_timeHelloTimeout:5000

# The time a node must be undesired before it lowers its level
interim_timeUndesired:10000

# The time a node must be desired before it increases its level
interim_timePromotion:5000

# Random number seed for interim algorithm.  0 means use gettimeofday.
interim_randomseed:0

# If a node is a leaf, and it has a clusterhead, it will drop its hello frequency to
# this multiple of the normal hello frequency.  Clusterheads will not drop their frequency.
# Default is 4.
interim_leafscale:4

# If this is set (to non-zero) a node will use the closest potential
# clusterhead on the route between it and the clusterhead it would
# really like to use.  This results in a taller hierarchy, but the
# actual number of hops a report will traverse from a leaf to the root
# will be smaller.  Default is enabled.
interim_enroutechenable:1

# A node must hear this many hellos with sequential sequence numbers 
# (IE: none dropped) from another node before it will consider that
# node to be "heard".  This requirement is only for single-hop neighbors,
# multi-hop neighbors are immediately heard, under the assumption that
# there are also multiple redundant paths, and thus more reliable.
interim_minsequentialcount:3

# Nodes whose hopcount to root is <= this value are in the "root group."   
# If using dynamic radius (interim_rootroupsizemin!=0), then this 
# is the maximum radius expanded to. 
interim_rootgroupradiusmax:2

# The least number of nodes required to be in the root group. The root
# will expand the root group radius until at least this many nodes are 
# in the group. Note that the current implementation is flawed in that 
# the root does not know about all the nodes in the MANET, so it 
# cannot reliably count the number of nodes in the root group in 
# a radius beyond 2. So if using this parameter, make sure that 
# "interim_rootgroupradiusmax" is set to 1 or 0. 
#
# If the value is 0, dynamic root group radius will not be used. 
interim_rootgroupsizemin:0

# Parameters for the DATA module
#  (The DATA module is the infrastructure's reliable datagram protocol)

# How long to keep track of a specific payload.  This needs to be long enough
# to cover the entire rexmit period, plus any possible stragglers.
data_timeoutentry:60000

# The data module will attempt to transmit the packet for this long using
# the ambient routing algorithm.  If it times out, it will switch to an
# internal flood routing algorithm.  If it still fails to get its acks 
# after data_failover_timeout, it will give up.
data_timeout:10000

# During the timeout period, the DATA module will retransmit a packet every
# this many milliseconds.  (There is no exponential backoff. (At this time.))
data_timerexmit:1000

# If this is true, then if a data packet is not delivered (acked) using 
# ambient routing, the data module will retry using flood routing.
data_routing_failover:1

# If the data module fails over to the flood routing algorithm, it will
# use these values for the timeout and timerexmit.  IE: we can try flood route
# for a shorter period than the initial routing mode.
data_failover_timeout:10000
data_failover_timerexmit:5000

# If this is set to a non-zero value, the data module will report how
# many messages have been sent, sent successfully, and received every
# 10 seconds.
data_status:1

# This is the size of a hashtable used to keep track of inflight messages
# by the data module.  It will be searched on reception of each data packet.
# Keep it prime, and about the number of inflight messages you expect to
# have.
data_inflighthashsize:107

# This specifies a file to read to get hierarchy position
# weights.  The weights may be changed using the idsCommunications
# API as well.
#
# Note: a relative pathname here will be interpreted relative to 
# the directory containing the main (live.conf) config file.
#positionweightfile:example.posweight

# List of message types that will not have routing failover done.
# Note that for any failver to occur, data_routing_failver must
# also be enabled.
# This is a comma delimited list of HEXADECIMAL message types, and
# there MUST be a leading and trailing comma.  (I was lazy with the
# parser... sorry...)
api_nofailoverlist:,12345,abcde,

# If this is set to zero, the API will not compress payload packets.
# (default behavior is to compress, using libz)
# This is a debugging option.  DO NOT DEFINE UNLESS YOU ARE DEBUGGING!
# If the settings of different nodes do not match, that error will
# not be detected by the demon, and you will be VERY unhappy.
#api_compression:1

# If the queue of apiCommand structs to be written to a client
# gets longer than this, then disconnect the client.  The default
# value is 200.  The API uses more of these things than you expect,
# 200 is actually small.
api_maxqueuelen:1000

#
# If using gmcluster (or interimgm), the number of positions to consider when
# computing velocity.
# (Note - not yet implemented for anything greater than 2. heh.)
gmcluster_positionHistory:30

#
# If using gmcluster (or interimgm), the level to log at, one of: trace, debug,
# info, notice, warn, critical, or fatal. 
#
gmcluster_loglevel:debug

#
# If using gmcluster (or interimgm), the length of the time stamp used
# when logging, one of: long, short, or no.
gmcluster_logtimestamp:short

#
# If using gmcluster (or interimgm), the minimum number of seconds a
# node must be thought to remain in contact with a node before it is
# considered part of the group.
#
gm_cluster_acceptableLinkExpirationTime:15

#
# If using gmcluster (or interimgm), how often to send a group ID
# heartbeat in seconds.
#
gmcluster_gidHeartbeatInterval:2

#
# If using gmcluster (or interimgm), how many heartbeat intervals to
# wait before choosing a new (local) group ID.
#
gmcluster_gidHeartbeatTimeoutFactor:3

# If this is set to a non-zero number, the watcher will run in black
# and white mode, for making easily printable screenshots.
watcher_monochrome:0

# This sets how many pixels per degree of GPS location.
watcher_gpsscale:80000

# To enable user-land NNP calls, to protect livenetwork packets, define a
# keyfile to use here.
# The keyfile must contain public keys for all nodes, and a private key for
# the local node.  It may contain the private keys for all nodes, for testing.
#
# Note: a relative pathname here will be interpreted relative to 
# the directory containing the main (live.conf) config file.
#keyfile:keyfile

# In simulator land, the rf model will accept the following variables.
#
# rf_mode indicates how the packets should be dropped.
#  ber- bit error rate - probability is dependant on the length of the packet
#       and some to-be-determined FEC parameters.
#  per- packet error rate - probability is per packet
#  leave undefined/blank to disable packet loss (really binary loss dependant on antenna radius)
rf_mode:per
#rf_mode:ber

# If in per mode, the probabiliy of a packet getting dropped  (0 to 1, float)
rf_per:0.2

# rf model random number seed
rf_seed:57

# If this is defined, then the packetapi module will not attempt to open
# filedescriptors for accepting connections to idsCommunications clients.
# (Handy for doing simulation experiments.)
#simulation:1
