
$Id: watchermetrics.txt,v 1.1 2005/09/09 15:30:29 tjohnson Exp $

How to measure stuff with the watcher:

First, run the watcher like so:

watcher test.conf > foo 2> foo2

Then let it run for a while.  That period will be the eventual sample time.
Exit by hitting escape in one of its windows.  (or SIGINT, or whatever...)
Don't let it run too long, the log files will grow FAST.

While its running, note the various numbers being displayed:

Edges will have a number beside them, that is the length of the edge in 
link layer hops.  Note that there are sometimes two numbers.  All the 
watcher's edges are triangular and one directional.  If a line is not
triangular, its really two triangles, each pointing in opposite directions,
and each direction gets a number.  

On the stderr of watcher will be found bandwidth reports.  Those lines can
be inspected with the watcherbw script.  
So run watcherbw, and specify the log file (in this case foo2) like so:

bash-2.05b$ watcherbw foo2
node, total xmit bytes, total xmit packets, xmit bytes/sec,  xmit packet/sec, rec bytes,rec packets, rec bytes/sec, rec packets/sec
119, 0xb1 11020, 224, 122.42, 2.48839, 37272, 760, 414.051, 8.44276
120, 0xb1 8840, 180, 98.2026, 1.9996, 35272, 716, 391.833, 7.95396
121, 0xb1 8652, 180, 96.1141, 1.9996, 24426, 495, 271.346, 5.4989
122, 0xb1 8464, 180, 94.0256, 1.9996, 15398, 315, 171.055, 3.4993
123, 0xb1 6934, 135, 77.029, 1.4997, 37688, 764, 418.672, 8.48719
124, 0xb1 10894, 225, 121.02, 2.4995, 41868, 852, 465.107, 9.46477
125, 0xb1 6934, 135, 77.029, 1.4997, 34944, 720, 388.189, 7.9984
126, 0xb1 8280, 180, 91.9816, 1.9996, 15030, 315, 166.967, 3.4993
127, 0xb1 6750, 135, 74.985, 1.4997, 34204, 720, 379.968, 7.9984
128, 0xb1 8280, 180, 91.9816, 1.9996, 25920, 540, 287.942, 5.9988
129, 0xb1 6030, 135, 66.9866, 1.4997, 20700, 450, 229.954, 4.999
130, 0xb1 8100, 180, 89.982, 1.9996, 25380, 540, 281.944, 5.9988
131, 0xb1 10176, 214, 119.694, 2.51714, 31454, 643, 369.973, 7.56319
132, 0xb1 10750, 215, 126.445, 2.52891, 45522, 945, 535.446, 11.1154
133, 0xb1 6278, 129, 73.8441, 1.51734, 22790, 473, 268.064, 5.56359
134, 0xb1 10406, 215, 122.399, 2.52891, 26204, 558, 308.221, 6.56339
135, 0xb1 10524, 214, 123.787, 2.51714, 51890, 1069, 610.349, 12.574
136, 0xb1 9958, 213, 117.13, 2.50538, 41010, 851, 482.374, 10.0098
137, 0xb1 10164, 210, 119.553, 2.47009, 44260, 926, 520.602, 10.8919
138, 0xb1 6132, 126, 72.1268, 1.48206, 21420, 462, 251.95, 5.43421
139, 0xb1 5124, 126, 60.2703, 1.48206, 21446, 463, 252.255, 5.44597

The output of watcherbw is a comma separated values file.  (excel can
read them, strangely enough).  The packet type 0xb1 is the clustering
algorithm packets.  

This method can also be used to observe client traffic, however the
packet types for client traffic are not straight forward, especially
telling data packets from ack packets, so I have not scripted that yet.

Then, one can look at the standard output of watcher, and see blocks
of lines which look like:

time: 1124983492001
packets/tick: 0.000000
distribution of 1 hop neighbors: 1.000000 2.571429 0.925820 4.000000
level histogram: level 0 12   dist of distance to CH: 1.000000 1.000000 0.000000 1.000000  dist of child degree: 0.000000 0.000000 0.000000 0.000000
level histogram: level 1 7   dist of distance to CH: 1.000000 1.571429 0.786796 3.000000  dist of child degree: 1.000000 1.428571 0.534522 2.000000
level histogram: level 2 1   dist of distance to CH: 2.000000 2.000000 nan 2.000000  dist of child degree: 2.000000 2.000000 nan 2.000000
level histogram: level 3 1   dist of distance to CH: 0.000000 0.000000 nan 0.000000  dist of child degree: 8.000000 8.000000 nan 8.000000
root 137 has 21 recursive kids
fraction of nodes connected to root 137 : 1.000000
numroots: 1
availability: 21 3960 21 1647093.000000  0.987187
physical all path length dist: 1.000000 3.223810 1.423433 7.000000
physical root path length dist: 1.000000 2.600000 1.095445 4.000000
mobility: num partitions: 1  time: 1124983495961
hierarchy all path length dist: 1.000000 4.371429 1.765526 8.000000
hierarchy root path length dist: 1.000000 2.600000 1.095445 4.000000
hierarchy CH path length dist: 1.000000 1.625000 0.744024 3.000000
hierarchy leaf-CH path length dist: 1.000000 1.000000 0.000000 1.000000
hierarchy: node child degree: 1.000000 2.222222 2.223611 8.000000
aggregation: 27.540000
hierarchy: num partitions: 1  time 1124983495961
packet origin: 0
packet repeat: 0


These are actually the raw statistics from the simulator.  Only a few of
them are meaningful however.  

1. "distribution of 1 hop neighbors"
This is the degree of each node, at the link level.  The four numbers are
minimum, mean, standard deviation, and maximum.

2. "physical root path length dist"
This is the distribution (minimum, mean, standard deviation, maximum) of
the distance of every node in link layer hops from the root node.  In the
event of a partition, it is the distance from the node to the root node in
the partition with the node.

3. "hierarchy root path length dist"
This is the same thing, only it uses the hierarchy paths only.  Note that
sometimes a hierarchy path is multiple physical hops.  This uses those
lengths.

4. "root 137 has 21 recursive kids" and
"fraction of nodes connected to root 137 : 1.000000"
These lines will exist for each root node in the hierarchy.  They indicate
how many recursive children the nodes have (including themselves), and
the fraction of the population of the MANET attached.
"

5: "time"
This is the absolute unix time, in milliseconds.

6: "level histogram"
: level 1 7   dist of distance to CH: 1.000000 1.571429 0.786796 3.000000  dist of child degree: 1.000000 1.428571 0.534522 2.
000000"

Level 0 nodes are leaves.  The distribution of distance to CH is how many
hops from the level 0 node to its level 1 or greater CH.  distribution of
child degree is the "fan in", the number of child nodes the level 0 node
has  (and should obviously be 0).

The root is at level n, and its distance to CH is meaningless, like the 
level 0 node's child degree...  Assuming no partitions, there will be only
one root node.
