#!/bin/sh

# Script to parse the bandwidth lines generated by the watcher.
# Quick and dirty version, as opposed to designed.
#
# $Id: watcherbw,v 1.6 2007/04/23 18:51:07 dkindred Exp $

LOG=$1

TMPDIR=/tmp
# The packet types will be reported individually.
# packet type 0xbx is interim2 algorithm.  
PACKETLIST="0xb1 0x11 0x12 0x70"
PACKETLIST="0xb1"

grep "^bandwidth" $LOG > $TMPDIR/bandwidth
nodelist=`awk ' { print $3 } ' $TMPDIR/bandwidth | sort -n | uniq`

# bandwidth: node 133 time 1121980191751 type 0xb1 0 0 0  0 13898 4173 611432 186362 
#     1       2    3    4        5        6    7   8 9 10 11 12    13    14    15

#8			as->packetList[i].unicastRecCount,
#9                        as->packetList[i].unicastXmitCount,
#10                       as->packetList[i].unicastRecByte,
#11                        as->packetList[i].unicastXmitByte,
#12                        as->packetList[i].bcastRecCount,
#13                        as->packetList[i].bcastXmitCount,
#14                        as->packetList[i].bcastRecByte,
##15                        as->packetList[i].bcastXmitByte);


echo "node, total xmit bytes, total xmit packets, xmit bytes/sec,  xmit packet/sec, rec bytes,rec packets, rec bytes/sec, rec packets/sec"
for i in $nodelist
do
for PACKETTYPE in $PACKETLIST
do
	avgpersec=`awk ' BEGIN {init=1}\
($3 == '$i') && ($7 =="'$PACKETTYPE'") {\
if (init)\
{\
	init=0 ; starttime=$5; startxmitbyte = $11 + $15 ; startxmitpacket=$9 + $13; startrecbyte=$10 + $14; startrecpacket=$8+$12;\
}\
endtime = $5; endxmitbyte=$11 + $15; endxmitpacket=$9 + $13; endrecbyte=$10 + $14; endrecpacket=$8+$12; \
}\
END { duration=(endtime - starttime) / 1000 ; print endxmitbyte - startxmitbyte ", " endxmitpacket - startxmitpacket ", "  (endxmitbyte - startxmitbyte) / duration ", " ( endxmitpacket - startxmitpacket ) / duration ", " endrecbyte - startrecbyte ", " endrecpacket - startrecpacket ", " (endrecbyte - startrecbyte)/ duration ", " (endrecpacket - startrecpacket) / duration }\
' $TMPDIR/bandwidth`
	echo "$i, $PACKETTYPE $avgpersec"
done
done

rm $TMPDIR/bandwidth

exit

cat <<HERE

Validation:

I then ran the watcher, and collected the bandwidth numbers
I then ran tcpdump on one of the test nodes," /usr/sbin/tcpdump -n -i eth0 udp port 4837 "
  tcpdump gets the packets before iptables has had a chance to discard anything.  Thus
  the tcpdump long is the union of all the node's transmissions.

I did not run any of the clients, and instead just ran the demon alone
I then ran the runcoke script, with a runtime of 300 seconds.

The watcherbw script then reported the total number of 0xb1 packets transmitted, and
tcpdump could validate the counts.  They did not match exactly, due to the watcher's
5 second polling delay.  However the counts were all within 10 packets.

HERE
