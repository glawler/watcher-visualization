--- /usr/home/glawler/src/watcher/include/log4cxx/helpers/objectptr.h	2010-04-26 16:42:25.000000000 +0000
+++ /usr/home/glawler/src/apache-log4cxx/src/main/include/log4cxx/helpers/objectptr.h	2010-04-27 14:23:04.000000000 +0000
@@ -27,22 +27,12 @@
 //   in member initialization list.  The use of a macro allows quick
 //   switching between the initialization styles.
 //
-
 #if LOG4CXX_HELGRIND
-#define _LOG4CXX_OBJECTPTR_INIT(x) : ObjectPtrBase() { exchange(x);
+#define _LOG4CXX_OBJECTPTR_INIT(x) : ObjectPtrBase() { exchange(x); 
 #else
 #define _LOG4CXX_OBJECTPTR_INIT(x) : ObjectPtrBase(), p(x) {
 #endif
 
-//
-// GTL - Fix warnings when building with -Wall
-//
-// #if LOG4CXX_HELGRIND
-// #define _LOG4CXX_OBJECTPTR_INIT(x) { exchange(x); 
-// #else
-// #define _LOG4CXX_OBJECTPTR_INIT(x) : p(x) {
-// #endif
-
 namespace log4cxx
 {
     namespace helpers
@@ -81,7 +71,7 @@
             }
 
 
-         ObjectPtrT(const ObjectPtrT& p1)  
+         ObjectPtrT(const ObjectPtrT& p1)
                 _LOG4CXX_OBJECTPTR_INIT(p1.p)
                 if (this->p != 0)
                 {
@@ -179,8 +169,13 @@
             return 0;
          }
        T* exchange(const T* newValue) {
+             // Avoid GCC strict aliasing warnings
+             union {
+               T** in;
+               void** out;
+             } temp = { &p };
              return static_cast<T*>(ObjectPtrBase::exchange(
-                 reinterpret_cast<void**>(&p), 
+                 temp.out, 
                  const_cast<T*>(newValue)));
        }
 
